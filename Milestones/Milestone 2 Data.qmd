---
title: "Regime Changes and Economic Preferences: Global Evidence"
subtitle: "Milestone 2: Data"
author: "Andrea Češková and Elvin Mammadov"
bibliography: references.bib
format: pdf
---

```{r}
#| include: false
if (!require("pacman")) install.packages("pacman")
library(pacman)
p_load(haven,
       here,
       stargazer,
       summarytools,
       readxl,
       dplyr,
       lubridate,
       ggplot2,
       vdemdata,
       summarytools,
       devtools,
       tidyr,
       kableExtra,
       gt,
       cowplot)


vdem <- vdemdata::vdem

#opening datasets (individual survey)
unzip(here("Input","GPS_Dataset.zip"))
unzip(here("Input", "GPS_dataset_individual_level.zip"))
GPS_indiv <- read_dta(here("Input","individual_v11_new.dta"))
GPS_indiv <- GPS_indiv %>%
  mutate(across(where(is.character), ~ iconv(., from = "", to = "UTF-8")))
#selecting necessary columns
vdem_sub <- vdem %>%
  select(country_name,country_text_id, year, v2x_libdem)

#calculating birth_years and selecting necessary columns
gps_sub <- GPS_indiv %>%
  mutate(birth_year = year(date) - age) %>%
  select(id_gallup, age , date, country,isocode, region, patience, risktaking, posrecip, negrecip, altruism, trust, subj_math_skills, gender, birth_year)

gps <- gps_sub %>%
  mutate(year = year(date)) %>% select(!date)
gps <- gps %>%
  mutate(year_adult = birth_year + 21) # Maybe we should base this decision (whether 25 any different age) on some literature? I will take a look.

gps <- gps %>%
  rename(interview_year = year)
# Function to identify if individuals experienced regime change during formative years
# Function to identify if individuals experienced regime change during formative years
generate_formative_regime_change <- function(democracy_data, gps_data, threshold) {
  # Processing democracy data to identify regime changes (same like previous)
  regime_change_years <- vdem_sub %>%
    arrange(country_text_id, year) %>%
    group_by(country_text_id) %>%
    mutate(
      libdem_diff = v2x_libdem - lag(v2x_libdem), # this approach does not capture linear change over few years, just sudden changes between years -> problematic? Maybe we can take into account a cumulative change over k years, to better separate the countries? Let's discuss :)
      regime_change = ifelse(libdem_diff > threshold, 1, 0)) %>%
  # filtering just for countries that experienced a regime change
    filter(regime_change == 1) %>%
    select(country_name, regime_change_year = year)
  
# Joining with individual level data and checking for formative years overlap
  result <- gps %>%
    left_join(regime_change_years,
            by = c("isocode" = "country_text_id"),
            relationship = "many-to-many") %>%
    group_by(id_gallup) %>% # unique identifier for individuals
    summarize(
      formative_regime_change = as.numeric(
      # This will be TRUE only if at least one regime change falls within formative years
      # It will be FALSE if there are no regime changes or if none fall within the range
      # The as.numeric() converts TRUE to 1 and FALSE to 0
        any(regime_change_year >= birth_year & 
              regime_change_year <= year_adult, 
            na.rm = TRUE)
        )
      ) %>%
    ungroup()

# Merge back with original individual data to keep all variables
  gps %>%
    left_join(result, by = "id_gallup")
}

# Applying the function
final_data <- generate_formative_regime_change(vdem_sub, gps, threshold = 0.03)



#Turning formative_regime_change into a labeled factor
final_data <- final_data %>%
  mutate(formative_regime_change = factor(formative_regime_change, 
                                          levels = c(0, 1),
                                          labels = c("No Regime Change experience", "Regime Change experience")))


gdp_data <- read_excel(here("Input", "mpd2023_web_2.xlsx"))

gdp_data <- gdp_data %>% 
  filter(year== 2012 | year== 2013)


final_data_gdp <- final_data %>%
  left_join(gdp_data %>% select(countrycode, year, gdppc),
            by = c("isocode" = "countrycode", "interview_year" = "year"))

final_data_gdp <- na.omit(final_data_gdp)

```

# Sources

In our project, we are making use of 3 datasets:

-   Vdem (@coppedge_v-dem_2025) dataset comes also as an R package:`vdemdata`. This dataset contains various democracy indicators for 202 countries starting of year 1789. We will be using the Liberal democracy index which combines many of these indicators into a single number for each country/year.

-   Global Preference Survey (@falk_global_2018) dataset was downloaded as a ZIP file from the [following website](https://gps.iza.org/downloads). This dataset contains information about economic preferences of 80337 individuals from 76 countries. The survey was conducted between 2012 and 2013.

-   Data on country's GDP's was downloaded from the [Maddison Project Database 2023](https://www.rug.nl/ggdc/historicaldevelopment/maddison/releases/maddison-project-database-2023) (@bolt_maddison-style_2025). This dataset was downloaded on 5th May 2025.

# Data

```{r}
#| include: false
library(pacman)
p_load(tidyverse,
       patchwork,
       ggthemes,
       RColorBrewer,
       gridExtra,
       effectsize,
       kableExtra,
       sf,
       rnaturalearth,
       rnaturalearthdata,
       viridis,
       broom,
       gridExtra)
```

Since we have information about age of each individual during the time of interview in the GPS survey, we were able to calculate their birth years. Then we could determine whether they experienced a regime change during their formative years. For this, we had to link the V-Dem dataset with the GPS survey data. Our goal was to separate the treated and control group of individuals based on the change of liberal democracy index from the V-Dem dataset. **The treated group in our analysis consists of individuals, who experienced a regime change before turning 21 years old**. We are still considering a range of 18-21 years, since this range aligns with legal adulthood in many countries. We are planning to test multiple thresholds, to see if our results will be robust across different specifications. **The regime change is determined as a year over year change in the Liberal democracy index**. Here we also had to decide on a **threshold**, which we think is rather arbitrary. That is why we are considering a different approach, to capture linear changes of the index, not just sudden changes over years.

Assigning the formative years threshold to 21 years results to the following number of observations in both groups:

```{r}
#| echo: false
table(final_data$formative_regime_change)
```

## Sample period

Our sample period is defined by the birth years of the indviduals, which we calculated based on the age information in the GPS dataset. Each study unit (=individual) appears once. We have data for 80337 individuals.

-   **Claimed reliability of each sample from a data quality point of view**

## Variables

As we discussed in the previous meeting, we would be deciding for **2 economic preferences** as outcome variables from the GPS dataset. **We chose to analyse the effect of regime changes on patience and trust**. We based our decision on the following plot of mean comparisons. We assume that by using these two variables, that have larger differences between the treated and control groups, we will be able to gain more statistical power in our analysis.

```{r}
#| echo: false
long_data <- final_data_gdp %>%
  pivot_longer(
    cols = c(trust, patience, risktaking, posrecip, negrecip, altruism),
    names_to = "preference_type",
    values_to = "value"
  ) %>%
  mutate(preference_type = str_to_title(preference_type))

# Change the formative_regime_change factor levels and labels
long_data <- long_data %>%
  mutate(formative_regime_change = case_when(
    formative_regime_change == "No Regime Change experience" ~ "Control",
    formative_regime_change == "Regime Change experience" ~ "Treated",
    TRUE ~ as.character(formative_regime_change)
  ))

# Calculating group means and confidence intervals
group_means <- long_data %>%
  group_by(formative_regime_change, preference_type) %>%
  summarise(
    mean_value = mean(value, na.rm = TRUE),
    se = sd(value, na.rm = TRUE) / sqrt(n()),
    ci_lower = mean_value - 1.96 * se,
    ci_upper = mean_value + 1.96 * se,
    .groups = "drop"
  )

# Order factors to make Treated come FIRST so it gets the first color (red in Set1)
group_means$formative_regime_change <- factor(
  group_means$formative_regime_change,
  levels = c("Treated", "Control")
)

# Creating a parallel coordinates plot
parallel_plot <- ggplot(group_means, aes(x = preference_type, y = mean_value,
                        group = formative_regime_change,
                        color = formative_regime_change)) +
  geom_ribbon(aes(ymin = ci_lower, ymax = ci_upper, fill = formative_regime_change),
              alpha = 0.2, color = NA) +
  geom_line(size = 1.2) +
  geom_point(size = 3) +
  # Only add labels to points on the plot, not in the legend
  geom_text(aes(label = round(mean_value, 2)), vjust = -1, size = 3, show.legend = FALSE) +
  # Using Set1 palette - first color (index 1) is red, second (index 2) is blue
  scale_color_brewer(palette = "Set1", name = "Group") +
  scale_fill_brewer(palette = "Set1", name = "Group") +
  labs(
    title = "Mean Preference Profiles by Regime Change Exposure",
    subtitle = "With 95% confidence intervals",
    x = "Economic Preference",
    y = "Mean Value"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 14, face = "bold", margin = margin(b = 10)),
    axis.text.x = element_text(angle = 45, hjust = 1),
    legend.position = "bottom",
    plot.title.position = "plot",
    plot.margin = margin(t = 15, r = 15, b = 15, l = 15)
  ) +
  # Use guides to override any legend keys
  guides(
    color = guide_legend(override.aes = list(label = NULL)),
    fill = guide_none()  # Hide the fill legend since it's redundant
  )

print(parallel_plot)
```

For completeness, we include **summary statistics** for all 6 economic preferences in Table 1. Table 2 depicts the summary statistics for our control variables.

```{r table of summary statistics}
#| echo: false
create_formatted_table <- function(data, vars, title, caption = NULL) {
  # Find all columns for specified variables using a regex pattern
  var_pattern <- paste0("^(", paste(vars, collapse = "|"), ")_")
  
  table_data <- data %>%
    # Select only matching columns plus the grouping variable
    select(formative_regime_change, matches(var_pattern)) %>%
    pivot_longer(
      # Select all columns except the grouping variable
      cols = -formative_regime_change,
      # Extract variable and stat from column names
      names_to = c("variable", "stat"),
      names_pattern = "(.*)_(.*)",
      values_to = "value"
    ) %>%
    # Keep only stats we're interested in
    filter(stat %in% c("mean", "sd", "min", "max", "n")) %>%
    # Reshape to wide format for display
    pivot_wider(
      id_cols = c(formative_regime_change, variable),
      names_from = stat,
      values_from = value
    ) %>%
    # Fix the deprecated across() function - use modern syntax
    mutate(
      mean = round(mean, 2),
      sd = round(sd, 2),
      min = round(min, 2),
      max = round(max, 2)
    )
  
  # Format using kableExtra
  table_data %>%
    kbl(caption = caption,
        col.names = c("Regime Change Experience", "Variable", "Mean", "SD", "Min", "Max", "N"),
        booktabs = TRUE) %>%
    kable_styling(latex_options = c("striped", "hold_position"), position = "center") %>%
    row_spec(0, bold = TRUE) %>%
    pack_rows(index = table(table_data$formative_regime_change)) %>%
    add_header_above(c(" " = 2, "Summary Statistics" = 5))
}

# Create tables
preferences_table <- create_formatted_table(
  summary_table,
  c("trust", "patience", "risktaking", "posrecip", "negrecip", "altruism"),
  "Economic Preferences",
  caption = "Table 1: Summary Statistics of Economic Preferences by Regime Change Experience"
)

controls_table <- create_formatted_table(
  summary_table,
  c("subj_math_skills", "gdppc", "age"),
  "Control Variables",
  caption = "Table 2: Summary Statistics of Control Variables by Regime Change Experience"
)

preferences_table
controls_table
```

```{r}
#| echo: false
age_cohort_data <- final_data_gdp %>%
  mutate(
    birth_decade = floor(birth_year / 10) * 10,
    age_group = case_when(
      age < 30 ~ "18-29",
      age < 40 ~ "30-39",
      age < 50 ~ "40-49",
      age < 60 ~ "50-59",
      TRUE ~ "60+"
    ),
    age_group = factor(age_group, levels = c("18-29", "30-39", "40-49", "50-59", "60+"))
  ) %>%
  group_by(birth_decade, age_group, formative_regime_change) %>%
  summarize(
    avg_trust = mean(trust, na.rm = TRUE),
    n = n(),
    .groups = "drop"
  ) %>%
  # Filter to ensure adequate sample size in each cell
  filter(n >= 5)

age_cohort_heatmap <- ggplot(age_cohort_data, 
                           aes(x = factor(birth_decade), y = age_group, fill = avg_trust)) +
  facet_wrap(~ formative_regime_change) +
  geom_tile() +
  geom_text(aes(label = paste0("n=", n)), 
            color = "white", size = 3) +
  scale_fill_viridis_c(option = "D") +
  labs(
    title = "Trust Levels by Birth Decade, Age Group, and Regime Change Exposure",
    subtitle = "Heatmap showing average trust scores with sample sizes",
    x = "Birth Decade",
    y = "Age Group",
    fill = "Average\nTrust Score"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 14, face = "bold"),
    strip.text = element_text(size = 12, face = "bold"),
    axis.text.x = element_text(angle = 45, hjust = 1)
  )

age_cohort_heatmap
```

Our main key variable is **`TRUST`** and **`PATIENCE.`**The graphs below depict the average values grouped by country in *2012* and *2013*.

```{r mean comparison maps}
#| echo: false
country_trust <- final_data_gdp %>%
  group_by(country, isocode) %>%
  summarise(mean_trust = mean(trust, na.rm = TRUE))

country_patience <- final_data_gdp %>%
  group_by(country, isocode) %>%
  summarise(mean_patience = mean(patience, na.rm = TRUE))

# Getting world map data
world <- ne_countries(scale = "medium", returnclass = "sf")

# Creating two separate datasets
world_trust <- left_join(world, country_trust, by = c("name" = "country"))
world_patience <- left_join(world, country_patience, by = c("name" = "country"))

# Creating the plots separately and combining with grid.arrange using longer approach
# Trust map
p1 <- ggplot(data = world_trust) +
  geom_sf(aes(fill = mean_trust), color = "white") +
  scale_fill_viridis_c(option = "C", na.value = "grey90") +
  labs(title = "Average Trust Level by Country",
       fill = "Mean Trust") +
  theme_minimal()

# Patience map
p2 <- ggplot(data = world_patience) +
  geom_sf(aes(fill = mean_patience), color = "white") +
  scale_fill_viridis_c(option = "B", na.value = "grey90") +
  labs(title = "Average Patience Level by Country",
       fill = "Mean Patience") +
  theme_minimal()

# Combining
combined_plot <- grid.arrange(p1, p2, ncol = 1)

```

The following graph depicts the **Trust levels by Regime Change Exposure**

```{r}
#| echo: false

ggplot(final_data_gdp, aes(x = formative_regime_change, y = trust)) +
  geom_boxplot(fill = "skyblue") +
  labs(
    x = "Group",
    y = "Trust",
    title = "Trust levels by Regime Change Exposure"
  )

ggplot(final_data_gdp, aes(x = formative_regime_change, y = patience)) +
  geom_boxplot(fill = "skyblue") +
  labs(
    x = "Group",
    y = "Trust",
    title = "Trust levels by Regime Change Exposure"
  )

```

# **Descriptive statistics**

The following figures present a detailed **visual overview of the descriptive statistics**, including distribution histograms, group-level comparisons, and difference-in-differences style visualizations highlighting trends across cohorts.

```{r}
#| echo: false
#-----------------------------------------------------------------------
# DiD PARALLEL TRENDS GRAPH
#-----------------------------------------------------------------------

# For DiD analysis, we need to create a visualization showing the evolution of outcomes
# across time for treatment and control groups

did_data <- final_data_gdp %>%
  mutate(birth_cohort = cut(birth_year, 
                          breaks = seq(1920, 2020, by = 10),
                          labels = paste0(seq(1920, 2010, by = 10), "s"),
                          include.lowest = TRUE)) %>%
  group_by(birth_cohort, formative_regime_change) %>%
  summarize(
    avg_trust = mean(trust, na.rm = TRUE),
    se_trust = sd(trust, na.rm = TRUE) / sqrt(n()),
    avg_patience = mean(patience, na.rm = TRUE),
    se_patience = sd(patience, na.rm = TRUE) / sqrt(n()),
    avg_risktaking = mean(risktaking, na.rm = TRUE),
    se_risktaking = sd(risktaking, na.rm = TRUE) / sqrt(n()),
    n = n(),
    .groups = "drop"
  )

# Create a "parallel trends" plot for trust
did_trust_plot <- ggplot(did_data, aes(x = birth_cohort, y = avg_trust, 
                                  group = formative_regime_change, 
                                  color = formative_regime_change)) +
  geom_line(size = 1.2) +
  geom_point(size = 3) +
  geom_errorbar(aes(ymin = avg_trust - se_trust, ymax = avg_trust + se_trust), width = 0.2) +
  geom_text(aes(label = paste0("n=", n)), vjust = -1, size = 3) +
  labs(
    title = "Trust by Birth Cohort and Regime Change Exposure",
    subtitle = "Difference-in-Differences visualization with standard errors",
    x = "Birth Cohort",
    y = "Average Trust Score",
    color = "Formative Years"
  ) +
  scale_color_brewer(palette = "Set1") +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    legend.position = "bottom",
    plot.title = element_text(face = "bold")
  )

# Create a multi-panel DiD plot for multiple outcomes
did_long <- did_data %>%
  pivot_longer(
    cols = c(avg_trust, avg_patience, avg_risktaking),
    names_to = "outcome",
    values_to = "avg_score"
  ) %>%
  pivot_longer(
    cols = c(se_trust, se_patience, se_risktaking),
    names_to = "se_type",
    values_to = "se"
  ) %>%
  # Match outcome with corresponding standard error
  filter(paste0("se_", str_remove(outcome, "avg_")) == se_type) %>%
  mutate(
    outcome_label = case_when(
      outcome == "avg_trust" ~ "Trust",
      outcome == "avg_patience" ~ "Patience",
      outcome == "avg_risktaking" ~ "Risk Taking"
    )
  )

# Create multiple outcome DiD plot
did_multi_plot <- ggplot(did_long, aes(x = birth_cohort, y = avg_score, 
                                   group = formative_regime_change, 
                                   color = formative_regime_change)) +
  geom_line(size = 1) +
  geom_point(size = 2) +
  geom_errorbar(aes(ymin = avg_score - se, ymax = avg_score + se), width = 0.2) +
  facet_wrap(~ outcome_label, scales = "free_y") +
  labs(
    title = "Economic Preferences by Birth Cohort and Regime Change",
    subtitle = "including standard errors",
    x = "Birth Cohort",
    y = "Average Score",
    color = "Formative Years"
  ) +
  scale_color_brewer(palette = "Set1") +
  theme_minimal() +
  theme(
    strip.text = element_text(face = "bold"),
    axis.text.x = element_text(angle = 45, hjust = 1),
    legend.position = "bottom",
    plot.title = element_text(face = "bold")
  )

#-----------------------------------------------------------------------
# HISTOGRAMS: DISTRIBUTION OF KEY VARIABLES
#-----------------------------------------------------------------------

# Function to create histograms with density overlays
create_histogram <- function(data, var_name, title) {
  ggplot(data, aes(x = !!sym(var_name), fill = formative_regime_change, color = formative_regime_change)) +
    geom_histogram(aes(y = after_stat(density)), alpha = 0.5, position = "identity", bins = 30) +
    geom_density(alpha = 0.2) +
    labs(
      title = title,
      x = str_to_title(var_name),
      y = "Density"
    ) +
    scale_fill_brewer(palette = "Set1", name = "Formative Years") +
    scale_color_brewer(palette = "Set1", name = "Formative Years") +
    theme_minimal()
}

# Create histograms for key variables
trust_hist <- create_histogram(final_data_gdp, "trust", "Distribution of Trust")
patience_hist <- create_histogram(final_data_gdp, "patience", "Distribution of Patience")
risk_hist <- create_histogram(final_data_gdp, "risktaking", "Distribution of Risk Taking")

# Combine histograms with a shared legend at the bottom
histograms_combined <- trust_hist + patience_hist + risk_hist +
  plot_layout(ncol = 3, guides = "collect") +  # This collects all guides into one legend
  plot_annotation(
    title = "Distribution of Key Economic Preferences",
    subtitle = "By regime change exposure during formative years (<21 years)",
    theme = theme(plot.title = element_text(size = 16, face = "bold"))
  ) &
  theme(legend.position = "bottom")  # This places the collected legend at the bottom

# DiD plots
print(histograms_combined)
print(did_trust_plot)
print(did_multi_plot)
```

The following figures present additional visualizations of our data.

```{r}
#| echo: false
democracy_2012 <- vdem_sub %>%
  filter(year == 2012) %>%
  select(country_name,country_text_id, v2x_libdem)

plot_data <- left_join(country_trust, democracy_2012, by =c ("isocode"= "country_text_id"))


ggplot(final_data_gdp, aes(x = age, y = trust, color = formative_regime_change)) + 
  geom_smooth(method = "loess", se = FALSE, size = 1.2) +
  theme_minimal() +
  labs(title = "Trust Score by Age and Regime Change Exposure",
       x = "Age",
       y = "Trust Score",
       color = "Formative Regime Change")
```

```{r}
#| echo: false
# Merge democracy index into the individual-level dataset
mixed_plot_data <- left_join(final_data_gdp, democracy_2012, by =c ("country"= "country_name"))



ggplot(mixed_plot_data, aes(x = subj_math_skills, y = trust, color = formative_regime_change)) + 
  geom_smooth(method = "loess", se = FALSE, size = 1.2) +
  theme_minimal() +
  labs(title = "Trust Score vs. Subjective Math Skills by Regime Change Exposure",
       x = "Subjective Math Skills",
       y = "Trust",
       color = "Formative Regime Change")
```
